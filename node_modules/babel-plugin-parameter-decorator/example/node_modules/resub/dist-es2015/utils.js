/**
 * utils.ts
 * Copyright: Microsoft 2019
 */
import { map } from './lodashMini';
var CompoundKeyJoinerString = '%&';
export var normalizeKey = function (key) { return (typeof key === 'number' ? key.toString() : key); };
export var normalizeKeys = function (keyOrKeys) { return (map(Array.isArray(keyOrKeys) ? keyOrKeys : [keyOrKeys], normalizeKey)); };
export var formCompoundKey = function () {
    var keys = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        keys[_i] = arguments[_i];
    }
    return keys.join(CompoundKeyJoinerString);
};
export var assert = function (cond, message) {
    if (!cond) {
        throw new Error("[resub] " + (message || 'Assertion Failed'));
    }
};
export function noop() {
    // noop
}
