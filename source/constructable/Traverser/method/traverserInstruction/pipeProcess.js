"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.pipeProcessing = pipeProcessing;
async function pipeProcessing({ targetNode, processResult, traverser = this }) {var _context;

  let pipe;
  const { pipeArray } = await (_context = traverser.graph.database, traverser.graph.database.getPipe).call(_context, { nodeID: targetNode.identity });
  if (pipeArray.length > 1) throw new Error(`â€¢ Multiple pipe relationships are not supported in Processs node.`);else

    if (pipeArray.length == 0) return processResult;else
    pipe = pipeArray[0];

  let pipeResult = processResult;

  let functionCallback = await traverser.traverserInstruction.resourceResolution.resolveResource.call(traverser, { targetNode: pipe.destination, contextPropertyName: 'functionReferenceContext' });
  if (functionCallback) {
    let pipeFunction = await functionCallback({ node: pipe.destination });
    pipeResult = pipeFunction.call(traverser, processResult);
  }


  pipeResult = pipeProcessing.call(traverser, { targetNode: pipe.destination, processResult: pipeResult });

  return pipeResult;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NvdXJjZS9jb25zdHJ1Y3RhYmxlL1RyYXZlcnNlci9tZXRob2QvdHJhdmVyc2VySW5zdHJ1Y3Rpb24vcGlwZVByb2Nlc3MuanMiXSwibmFtZXMiOlsicGlwZVByb2Nlc3NpbmciLCJ0YXJnZXROb2RlIiwicHJvY2Vzc1Jlc3VsdCIsInRyYXZlcnNlciIsInBpcGUiLCJwaXBlQXJyYXkiLCJncmFwaCIsImRhdGFiYXNlIiwiZ2V0UGlwZSIsIm5vZGVJRCIsImlkZW50aXR5IiwibGVuZ3RoIiwiRXJyb3IiLCJwaXBlUmVzdWx0IiwiZnVuY3Rpb25DYWxsYmFjayIsInRyYXZlcnNlckluc3RydWN0aW9uIiwicmVzb3VyY2VSZXNvbHV0aW9uIiwicmVzb2x2ZVJlc291cmNlIiwiZGVzdGluYXRpb24iLCJjb250ZXh0UHJvcGVydHlOYW1lIiwicGlwZUZ1bmN0aW9uIiwibm9kZSJdLCJtYXBwaW5ncyI6IjtBQUNPLGVBQWVBLGNBQWYsQ0FBOEIsRUFBRUMsVUFBRixFQUFjQyxhQUFkLEVBQTZCQyxTQUFTLEdBQUcsSUFBekMsRUFBOUIsRUFBK0U7O0FBRXBGLE1BQUlDLElBQUo7QUFDQSxRQUFNLEVBQUVDLFNBQUYsS0FBZ0IsTUFBTSxZQUFBRixTQUFTLENBQUNHLEtBQVYsQ0FBZ0JDLFFBQWhCLEVBQTBCSixTQUFTLENBQUNHLEtBQVYsQ0FBZ0JDLFFBQWhCLENBQXlCQyxPQUFuRCxpQkFBMkQsRUFBRUMsTUFBTSxFQUFFUixVQUFVLENBQUNTLFFBQXJCLEVBQTNELENBQTVCO0FBQ0EsTUFBSUwsU0FBUyxDQUFDTSxNQUFWLEdBQW1CLENBQXZCLEVBQTBCLE1BQU0sSUFBSUMsS0FBSixDQUFXLG1FQUFYLENBQU4sQ0FBMUI7O0FBRUssUUFBSVAsU0FBUyxDQUFDTSxNQUFWLElBQW9CLENBQXhCLEVBQTJCLE9BQU9ULGFBQVAsQ0FBM0I7QUFDQUUsSUFBQUEsSUFBSSxHQUFHQyxTQUFTLENBQUMsQ0FBRCxDQUFoQjs7QUFFTCxNQUFJUSxVQUFVLEdBQUdYLGFBQWpCOztBQUVBLE1BQUlZLGdCQUFnQixHQUFHLE1BQWlCWCxTQUFTLENBQUNZLG9CQUFWLENBQStCQyxrQkFBL0IsQ0FBa0RDLGVBQTdELE1BQUFkLFNBQVMsRUFBb0UsRUFBRUYsVUFBVSxFQUFFRyxJQUFJLENBQUNjLFdBQW5CLEVBQWdDQyxtQkFBbUIsRUFBRSwwQkFBckQsRUFBcEUsQ0FBdEM7QUFDQSxNQUFJTCxnQkFBSixFQUFzQjtBQUNwQixRQUFJTSxZQUFZLEdBQUcsTUFBTU4sZ0JBQWdCLENBQUMsRUFBRU8sSUFBSSxFQUFFakIsSUFBSSxDQUFDYyxXQUFiLEVBQUQsQ0FBekM7QUFDQUwsSUFBQUEsVUFBVSxHQUFjTyxZQUFYLE1BQUFqQixTQUFTLEVBQWVELGFBQWYsQ0FBdEI7QUFDRDs7O0FBR0RXLEVBQUFBLFVBQVUsR0FBY2IsY0FBWCxNQUFBRyxTQUFTLEVBQWlCLEVBQUVGLFVBQVUsRUFBRUcsSUFBSSxDQUFDYyxXQUFuQixFQUFnQ2hCLGFBQWEsRUFBRVcsVUFBL0MsRUFBakIsQ0FBdEI7O0FBRUEsU0FBT0EsVUFBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiLy8gcG9zdCByZW5kZXJpbmcgcHJvY2Vzc2luZyBhbGdvcml0aG1zLCB3aGVuIHJlcXVpcmVkIGUuZy4gZnVydGhlciBwcm9jZXNzaW5nIG9mIHJlbmRyZWQgdGVtcGxhdGVzXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcGlwZVByb2Nlc3NpbmcoeyB0YXJnZXROb2RlLCBwcm9jZXNzUmVzdWx0LCB0cmF2ZXJzZXIgPSB0aGlzIH0pIHtcbiAgLy8gZ2V0IHBpcGUgZWRnZVxuICBsZXQgcGlwZVxuICBjb25zdCB7IHBpcGVBcnJheSB9ID0gYXdhaXQgdHJhdmVyc2VyLmdyYXBoLmRhdGFiYXNlOjp0cmF2ZXJzZXIuZ3JhcGguZGF0YWJhc2UuZ2V0UGlwZSh7IG5vZGVJRDogdGFyZ2V0Tm9kZS5pZGVudGl0eSB9KVxuICBpZiAocGlwZUFycmF5Lmxlbmd0aCA+IDEpIHRocm93IG5ldyBFcnJvcihg4oCiIE11bHRpcGxlIHBpcGUgcmVsYXRpb25zaGlwcyBhcmUgbm90IHN1cHBvcnRlZCBpbiBQcm9jZXNzcyBub2RlLmApXG4gIC8vIHNraXAgaWYgbm8gcGlwZSBjb25uZWN0aW9uIC0gcmV0dXJuIHZhbHVlIHdpdGhvdXQgY2hhbmdlXG4gIGVsc2UgaWYgKHBpcGVBcnJheS5sZW5ndGggPT0gMCkgcmV0dXJuIHByb2Nlc3NSZXN1bHRcbiAgZWxzZSBwaXBlID0gcGlwZUFycmF5WzBdXG5cbiAgbGV0IHBpcGVSZXN1bHQgPSBwcm9jZXNzUmVzdWx0IC8vIHNldCBpbml0aWFsIHJlc3VsdFxuXG4gIGxldCBmdW5jdGlvbkNhbGxiYWNrID0gYXdhaXQgdHJhdmVyc2VyOjp0cmF2ZXJzZXIudHJhdmVyc2VySW5zdHJ1Y3Rpb24ucmVzb3VyY2VSZXNvbHV0aW9uLnJlc29sdmVSZXNvdXJjZSh7IHRhcmdldE5vZGU6IHBpcGUuZGVzdGluYXRpb24sIGNvbnRleHRQcm9wZXJ0eU5hbWU6ICdmdW5jdGlvblJlZmVyZW5jZUNvbnRleHQnIH0pXG4gIGlmIChmdW5jdGlvbkNhbGxiYWNrKSB7XG4gICAgbGV0IHBpcGVGdW5jdGlvbiA9IGF3YWl0IGZ1bmN0aW9uQ2FsbGJhY2soeyBub2RlOiBwaXBlLmRlc3RpbmF0aW9uIH0pIC8vIGV4cGVjdGVkIHRvIHJldHVybiBhIHBpcGUgZnVuY3Rpb24uXG4gICAgcGlwZVJlc3VsdCA9IHRyYXZlcnNlcjo6cGlwZUZ1bmN0aW9uKHByb2Nlc3NSZXN1bHQpXG4gIH1cblxuICAvLyByZWN1cnNpdmUgY2FsbCBmb3IgbmVzdGVkIHBpcGUgZWRnZXMgKGZvcm1pbmcgYSBwaXBlbGluZSBmcm9tIHRoZSBtYWluIHByb2Nlc3Mgbm9kZSkuXG4gIHBpcGVSZXN1bHQgPSB0cmF2ZXJzZXI6OnBpcGVQcm9jZXNzaW5nKHsgdGFyZ2V0Tm9kZTogcGlwZS5kZXN0aW5hdGlvbiwgcHJvY2Vzc1Jlc3VsdDogcGlwZVJlc3VsdCB9KVxuXG4gIHJldHVybiBwaXBlUmVzdWx0XG59XG4iXX0=