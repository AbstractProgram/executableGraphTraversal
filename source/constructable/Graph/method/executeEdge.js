"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.executeEdge = executeEdge;


async function executeEdge({ stageNode, nextProcessData, getImplementation, graphInstance }, { additionalParameter, traverseCallContext }) {
  let execute;
  const { executeArray } = await graphInstance.databaseWrapper.getExecution({ concreteDatabase: graphInstance.database, nodeID: stageNode.identity });
  if (executeArray.length > 1) throw new Error(`â€¢ Multiple execute relationships are not supported in Stage node.`);else

    if (executeArray.length == 0) return null;else
    execute = executeArray[0];


  let implementation = getImplementation(execute.connection.properties.implementation);
  let processResult = await implementation.call(stageNode, { processNode: execute.destination, stageNode, graphInstance, nextProcessData }, { additionalParameter, traverseCallContext });

  return processResult;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NvdXJjZS9jb25zdHJ1Y3RhYmxlL0dyYXBoL21ldGhvZC9leGVjdXRlRWRnZS5qcyJdLCJuYW1lcyI6WyJleGVjdXRlRWRnZSIsInN0YWdlTm9kZSIsIm5leHRQcm9jZXNzRGF0YSIsImdldEltcGxlbWVudGF0aW9uIiwiZ3JhcGhJbnN0YW5jZSIsImFkZGl0aW9uYWxQYXJhbWV0ZXIiLCJ0cmF2ZXJzZUNhbGxDb250ZXh0IiwiZXhlY3V0ZSIsImV4ZWN1dGVBcnJheSIsImRhdGFiYXNlV3JhcHBlciIsImdldEV4ZWN1dGlvbiIsImNvbmNyZXRlRGF0YWJhc2UiLCJkYXRhYmFzZSIsIm5vZGVJRCIsImlkZW50aXR5IiwibGVuZ3RoIiwiRXJyb3IiLCJpbXBsZW1lbnRhdGlvbiIsImNvbm5lY3Rpb24iLCJwcm9wZXJ0aWVzIiwicHJvY2Vzc1Jlc3VsdCIsInByb2Nlc3NOb2RlIiwiZGVzdGluYXRpb24iXSwibWFwcGluZ3MiOiI7OztBQUdPLGVBQWVBLFdBQWYsQ0FBMkIsRUFBRUMsU0FBRixFQUFhQyxlQUFiLEVBQThCQyxpQkFBOUIsRUFBaURDLGFBQWpELEVBQTNCLEVBQTZGLEVBQUVDLG1CQUFGLEVBQXVCQyxtQkFBdkIsRUFBN0YsRUFBMkk7QUFDaEosTUFBSUMsT0FBSjtBQUNBLFFBQU0sRUFBRUMsWUFBRixLQUFtQixNQUFNSixhQUFhLENBQUNLLGVBQWQsQ0FBOEJDLFlBQTlCLENBQTJDLEVBQUVDLGdCQUFnQixFQUFFUCxhQUFhLENBQUNRLFFBQWxDLEVBQTRDQyxNQUFNLEVBQUVaLFNBQVMsQ0FBQ2EsUUFBOUQsRUFBM0MsQ0FBL0I7QUFDQSxNQUFJTixZQUFZLENBQUNPLE1BQWIsR0FBc0IsQ0FBMUIsRUFBNkIsTUFBTSxJQUFJQyxLQUFKLENBQVcsbUVBQVgsQ0FBTixDQUE3Qjs7QUFFSyxRQUFJUixZQUFZLENBQUNPLE1BQWIsSUFBdUIsQ0FBM0IsRUFBOEIsT0FBTyxJQUFQLENBQTlCO0FBQ0FSLElBQUFBLE9BQU8sR0FBR0MsWUFBWSxDQUFDLENBQUQsQ0FBdEI7OztBQUdMLE1BQUlTLGNBQWMsR0FBR2QsaUJBQWlCLENBQUNJLE9BQU8sQ0FBQ1csVUFBUixDQUFtQkMsVUFBbkIsQ0FBOEJGLGNBQS9CLENBQXRDO0FBQ0EsTUFBSUcsYUFBYSxHQUFHLE1BQWlCSCxjQUFYLE1BQUFoQixTQUFTLEVBQWlCLEVBQUVvQixXQUFXLEVBQUVkLE9BQU8sQ0FBQ2UsV0FBdkIsRUFBb0NyQixTQUFwQyxFQUErQ0csYUFBL0MsRUFBOERGLGVBQTlELEVBQWpCLEVBQWtHLEVBQUVHLG1CQUFGLEVBQXVCQyxtQkFBdkIsRUFBbEcsQ0FBbkM7O0FBRUEsU0FBT2MsYUFBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFzc2VydCBmcm9tICdhc3NlcnQnXG5cbi8vIFJlc3BvbnNpYmxlIGZvciBwcm9jZXNzaW5nIGRhdGEuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZXhlY3V0ZUVkZ2UoeyBzdGFnZU5vZGUsIG5leHRQcm9jZXNzRGF0YSwgZ2V0SW1wbGVtZW50YXRpb24sIGdyYXBoSW5zdGFuY2UgfSwgeyBhZGRpdGlvbmFsUGFyYW1ldGVyLCB0cmF2ZXJzZUNhbGxDb250ZXh0IH0pIHtcbiAgbGV0IGV4ZWN1dGVcbiAgY29uc3QgeyBleGVjdXRlQXJyYXkgfSA9IGF3YWl0IGdyYXBoSW5zdGFuY2UuZGF0YWJhc2VXcmFwcGVyLmdldEV4ZWN1dGlvbih7IGNvbmNyZXRlRGF0YWJhc2U6IGdyYXBoSW5zdGFuY2UuZGF0YWJhc2UsIG5vZGVJRDogc3RhZ2VOb2RlLmlkZW50aXR5IH0pXG4gIGlmIChleGVjdXRlQXJyYXkubGVuZ3RoID4gMSkgdGhyb3cgbmV3IEVycm9yKGDigKIgTXVsdGlwbGUgZXhlY3V0ZSByZWxhdGlvbnNoaXBzIGFyZSBub3Qgc3VwcG9ydGVkIGluIFN0YWdlIG5vZGUuYClcbiAgLy8gc2tpcCBpZiBubyBleGVjdXRlIGNvbm5lY3Rpb25cbiAgZWxzZSBpZiAoZXhlY3V0ZUFycmF5Lmxlbmd0aCA9PSAwKSByZXR1cm4gbnVsbFxuICBlbHNlIGV4ZWN1dGUgPSBleGVjdXRlQXJyYXlbMF1cblxuICAvLyBFeGVjdXRlIG5vZGUgZGF0YUl0ZW1cbiAgbGV0IGltcGxlbWVudGF0aW9uID0gZ2V0SW1wbGVtZW50YXRpb24oZXhlY3V0ZS5jb25uZWN0aW9uLnByb3BlcnRpZXMuaW1wbGVtZW50YXRpb24pIC8vIG5vZGUvZWRnZSBwcm9wZXJ0aWVzIGltcGxlbWVudGF0aW9uIGhpZXJhcmNoeSAtIGNhbGN1bGF0ZSBhbmQgcGljayBjb3JyZWN0IGltcGxlbWVudGF0aW9uIGFjY29yZGluZyB0byBwYXJhbWV0ZXIgaGllcmFyY2h5LlxuICBsZXQgcHJvY2Vzc1Jlc3VsdCA9IGF3YWl0IHN0YWdlTm9kZTo6aW1wbGVtZW50YXRpb24oeyBwcm9jZXNzTm9kZTogZXhlY3V0ZS5kZXN0aW5hdGlvbiwgc3RhZ2VOb2RlLCBncmFwaEluc3RhbmNlLCBuZXh0UHJvY2Vzc0RhdGEgfSwgeyBhZGRpdGlvbmFsUGFyYW1ldGVyLCB0cmF2ZXJzZUNhbGxDb250ZXh0IH0pXG5cbiAgcmV0dXJuIHByb2Nlc3NSZXN1bHRcbn1cbiJdfQ==